/* Copyright (c) 2012, 浙江大华技术股份有限公司, All rights reserved.
 * 2014-08
 *
 * DDMI.h : DMI信息处理函数
 */

#ifndef INCLUDED_LIBDSL_DDMI_H
#define INCLUDED_LIBDSL_DDMI_H

#include <libdsl/dslbase.h>
#include <libdsl/DStr.h>
#include <list>

#ifdef _WIN32
#include <Windows.h>
#include <tchar.h>
typedef UINT (WINAPI *pfGetSystemDMITable)(__in DWORD, __in DWORD, __out_bcount_part_opt(BufferSize, return) PVOID, __in DWORD);
#endif

BEGIN_NAMESPACE_DSL
/////////////////////////////////////////////////

typedef unsigned char u8;
typedef unsigned short u16;
typedef signed short i16;
typedef unsigned int u32;

#ifdef BIGENDIAN
typedef struct {
	u32 h;
	u32 l;
} u64;
#else
typedef struct {
	u32 l;
	u32 h;
} u64;
#endif

class DDmiHeader
{
public:
	u8 m_type;
	u8 m_length;
	u16 m_handle;
};

enum DMIType
{
	DMI_TYPE_BIOS_INFORMATION = 0,						/* 3.3.1 BIOS Information */
	DMI_TYPE_SYSTEM_INFORMATION = 1,					/* 3.3.2 System Information */
	DMI_TYPE_BASE_BOARD_INFORMATION,					/* 3.3.3 Base Board Information */
	DMI_TYPE_CHASSIS_INFORMATION,						/* 3.3.4 Chassis Information */
	DMI_TYPE_PROCESSOR_INFORMATION,						/* 3.3.5 Processor Information */
	DMI_TYPE_MEMORY_CONTROLLER_INFORMATION,				/* 3.3.6 Memory Controller Information */
	DMI_TYPE_MEMORY_MODULE_INFORMATION = 6,				/* 3.3.7 Memory Module Information */
	DMI_TYPE_CACHE_INFORMATION,							/* 3.3.8 Cache Information */
	DMI_TYPE_PORT_CONNECTOR_INFORMATION,				/* 3.3.9 Port Connector Information */
	DMI_TYPE_SYSTEM_SLOTS,								/* 3.3.10 System Slots */
	DMI_TYPE_ONBOARD_DEVICES_INFORMATION,				/* 3.3.11 On Board Devices Information */
	DMI_TYPE_OEM_STRINGS = 11,							/* 3.3.12 OEM Strings */
	DMI_TYPE_SYSTEM_CONFIG_OPTIONS,						/* 3.3.13 System Configuration Options */
	DMI_TYPE_BIOS_LANGUAGE_INFORMATION,					/* 3.3.14 BIOS Language Information */
	DMI_TYPE_GROUP_ASSOCIATIONS,						/* 3.3.15 Group Associations */
	DMI_TYPE_SYSTEM_EVENT_LOG,							/* 3.3.16 System Event Log */
	DMI_TYPE_PHYSICAL_MEMORY_ARRAY = 16,				/* 3.3.17 Physical Memory Array */
	DMI_TYPE_MEMORY_DEVICE,								/* 3.3.18 Memory Device */
	DMI_TYPE_MEMORY_ERROR_INFORMATION,					/* 3.3.19 32-bit Memory Error Information */
	DMI_TYPE_MEMORY_ARRAY_MAPPED_ADDRESS,				/* 3.3.20 Memory Array Mapped Address */
	DMI_TYPE_MEMORY_DEVICE_MAPPED_ADDRESS,				/* 3.3.21 Memory Device Mapped Address */
	DMI_TYPE_BUILT_IN_POINTING_DEVICE = 21,				/* 3.3.22 Built-in Pointing Device */
	DMI_TYPE_PORTABLE_BATTERY,							/* 3.3.23 Portable Battery */
	DMI_TYPE_SYSTEM_RESET,								/* 3.3.24 System Reset */
	DMI_TYPE_HARDWARE_SECURITY,							/* 3.3.25 Hardware Security */
	DMI_TYPE_SYSTEM_POWER_CONTROLS,						/* 3.3.26 System Power Controls */
	DMI_TYPE_VOLTAGE_PROBE = 26,						/* 3.3.27 Voltage Probe */
	DMI_TYPE_COOLING_DEVICE,							/* 3.3.28 Cooling Device */
	DMI_TYPE_TEMPERATURE_PROBE,							/* 3.3.29 Temperature Probe */
	DMI_TYPE_ELECTRICAL_CURRENT_PROBE,					/* 3.3.30 Electrical Current Probe */
	DMI_TYPE_OUT_OF_BAND_REMOTE_ACCESS,					/* 3.3.31 Out-of-band Remote Access */
	DMI_TYPE_BOOT_INTEGRITY_SERVICES_ENTRY_POINT = 31,	/* 3.3.32 Boot Integrity Services Entry Point */
	DMI_TYPE_SYSTEM_BOOT_INFORMATION,					/* 3.3.33 System Boot Information */
	DMI_TYPE_64BIT_MEMORY_ERROR_INFORMATION,			/* 3.3.34 64-bit Memory Error Information */
	DMI_TYPE_MANAGEMENT_DEVICE,							/* 3.3.35 Management Device */
	DMI_TYPE_MANAGEMENT_DEVICE_COMPONENT,				/* 3.3.36 Management Device Component */
	DMI_TYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA = 36,		/* 3.3.37 Management Device Threshold Data */
	DMI_TYPE_MEMORY_CHANNEL,							/* 3.3.38 Memory Channel */
	DMI_TYPE_IPMI_DEVICE_INFORMATION,					/* 3.3.39 IPMI Device Information */
	DMI_TYPE_SYSTEM_POWER_SUPPLY = 39,					/* 3.3.40 System Power Supply */

	DMI_TYPE_INACTIVE = 126,							/* 3.3.41 Inactive */
	DMI_TYPE_END_OF_TABLE,								/* 3.3.42 End Of Table */

};

enum DmiSubType
{
	/* 3.3.1 BIOS Information */
	DMI_SUBTYPE_BIOS_VENDOR = 0x04,
	DMI_SUBTYPE_BIOS_VERSION,
	DMI_SUBTYPE_BIOS_ADDRESS,
	DMI_SUBTYPE_BIOS_RELEASE_DATE = 0x08,

	/* 3.3.2 System Information */
	DMI_SUBTYPE_SYSTEM_MANUFACTURER = 0x04,
	DMI_SUBTYPE_SYSTEM_PRODUCT_NAME,
	DMI_SUBTYPE_SYSTEM_VERSION,
	DMI_SUBTYPE_SYSTEM_SERIAL_NUMBER,
	DMI_SUBTYPE_SYSTEM_UUID,
	DMI_SUBTYPE_SYSTEM_WAKE_UP_TYPE = 0x18,
	DMI_SUBTYPE_SYSTEM_SKU_NUMBER = 0x19,
	DMI_SUBTYPE_SYSTEM_FAMILY = 0x1A,

	/* 3.3.3 Base Board Information */
	DMI_SUBTYPE_BBI_MANUFACTURER = 0x04,
	DMI_SUBTYPE_BBI_PRODUCT_NAME,
	DMI_SUBTYPE_BBI_VERSION,
	DMI_SUBTYPE_BBI_SERIAL_NUMBER,
	DMI_SUBTYPE_BBI_ASSET_TAG,
	DMI_SUBTYPE_BBI_FEATURES,
	DMI_SUBTYPE_BBI_LOCATION_IN_CHASSIS = 0x0A,
	DMI_SUBTYPE_BBI_CHASSIS_HANDLE,

	/* 3.3.4 Chassis Information */
	DMI_SUBTYPE_CHASSIS_MANUFACTURER = 0x04,
	DMI_SUBTYPE_CHASSIS_TYPE,
	DMI_SUBTYPE_CHASSIS_VERSION,
	DMI_SUBTYPE_CHASSIS_SERIAL_NUMBER,
	DMI_SUBTYPE_CHASSIS_ASSET_TAG,
	DMI_SUBTYPE_CHASSIS_BOOT_UP_STATE,
	DMI_SUBTYPE_CHASSIS_POWER_SUPPLY_STATE = 0x0A,
	DMI_SUBTYPE_CHASSIS_THERMAL_STATE,
	DMI_SUBTYPE_CHASSIS_SECURITY_STATUS,
	DMI_SUBTYPE_CHASSIS_OEM_INFORMATION,
	DMI_SUBTYPE_CHASSIS_HEIGHT = 0x11,
	DMI_SUBTYPE_CHASSIS_NUMBER_OF_POWER_CORDS,

	/* 3.3.5 Processor Information */
	DMI_SUBTYPE_PROCESSOR_SOCKET_DESIGNATION = 0x04,
	DMI_SUBTYPE_PROCESSOR_TYPE,
	DMI_SUBTYPE_PROCESSOR_FAMILY,
	DMI_SUBTYPE_PROCESSOR_MANUFACTURER,
	DMI_SUBTYPE_PROCESSOR_VERSION = 0x10,
	DMI_SUBTYPE_PROCESSOR_VOLTAGE,
	DMI_SUBTYPE_PROCESSOR_EXTERNAL_CLOCK,
	DMI_SUBTYPE_PROCESSOR_MAX_SPEED = 0x14,
	DMI_SUBTYPE_PROCESSOR_CURRENT_SPEED = 0x16,
	DMI_SUBTYPE_PROCESSOR_STATUS = 0x18,
	DMI_SUBTYPE_PROCESSOR_UPGRADE,
	DMI_SUBTYPE_PROCESSOR_CACHE_HANDLE_L1 = 0x1A,
	DMI_SUBTYPE_PROCESSOR_CACHE_HANDLE_L2 = 0x1C,
	DMI_SUBTYPE_PROCESSOR_CACHE_HANDLE_L3 = 0x1E,
	DMI_SUBTYPE_PROCESSOR_SERIAL_NUMBER = 0x20,
	DMI_SUBTYPE_PROCESSOR_ASSET_TAG,
	DMI_SUBTYPE_PROCESSOR_PART_NUMBER,

	/* 3.3.6 Memory Controller Information */
	DMI_SUBTYPE_MEMCTL_ERROR_DETECTING_MODE = 0x04,
	DMI_SUBTYPE_MEMCTL_ERROR_CORRECTING_CAPABILITY,
	DMI_SUBTYPE_MEMCTL_SUPPORTED_INTERLEAVE,
	DMI_SUBTYPE_MEMCTL_CURRENT_INTERLEAVE,
	DMI_SUBTYPE_MEMCTL_MAX_MEM_MODULE_SIZE,
	DMI_SUBTYPE_MEMCTL_SUPPORTED_SPEEDS,
	DMI_SUBTYPE_MEMCTL_SUPPORTED_MEM_TYPES = 0x0B,
	DMI_SUBTYPE_MEMCTL_MEMORY_MODULE_VOLTAGE = 0x0D,

	/* 3.3.7 Memory Module Information */
	DMI_SUBTYPE_MEMORY_MODULE_SOCKET_DESIGNATION = 0x04,
	DMI_SUBTYPE_MEMORY_MODULE_BANK_CONNECTIONS,
	DMI_SUBTYPE_MEMORY_MODULE_CURRENT_SPEED,
	DMI_SUBTYPE_MEMORY_MODULE_TYPE,
	DMI_SUBTYPE_MEMORY_MODULE_INSTALLED_SIZE = 0x09,
	DMI_SUBTYPE_MEMORY_MODULE_ENABLED_SIZE = 0x0A,
	DMI_SUBTYPE_MEMORY_MODULE_ERROR_STATUS,

	/* 3.3.8 Cache Information */
	DMI_SUBTYPE_CACHE_SOCKET_DESIGNATION = 0x04,
	DMI_SUBTYPE_CACHE_CONFIGURATION,
	DMI_SUBTYPE_CACHE_OPERATION_MODE,
	DMI_SUBTYPE_CACHE_MAX_SIZE,
	DMI_SUBTYPE_CACHE_LOCATION,
	DMI_SUBTYPE_CACHE_INSTALLED_SIZE,
	DMI_SUBTYPE_CACHE_SUPPORTED_SRAM_TYPES = 0x0B,
	DMI_SUBTYPE_CACHE_INSTALLED_SRAM_TYPE = 0x0D,
	DMI_SUBTYPE_CACHE_SPEED = 0x0F,
	DMI_SUBTYPE_CACHE_ERROR_CORRECTION_TYPE = 0x10,
	DMI_SUBTYPE_CACHE_SYSTEM_TYPE,
	DMI_SUBTYPE_CACHE_ASSOCIATIVITY,

	/* 3.3.9 Port Connector Information */
	DMI_SUBTYPE_PORT_CONNECTOR_INT_REF_DESIGNATOR = 0x04,
	DMI_SUBTYPE_PORT_CONNECTOR_INT_CONNECTOR_TYPE,
	DMI_SUBTYPE_PORT_CONNECTOR_EXT_REF_DESIGNATOR,
	DMI_SUBTYPE_PORT_CONNECTOR_EXT_CONNECTOR_TYPE,
	DMI_SUBTYPE_PORT_CONNECTOR_PORT_TYPE,

	/* 3.3.10 System Slots */
	DMI_SUBTYPE_SYSTEM_SLOTS_DESIGNATION = 0x04,
	DMI_SUBTYPE_SYSTEM_SLOTS_TYPE,
	DMI_SUBTYPE_SYSTEM_SLOTS_CURRENT_USAGE = 0x07,
	DMI_SUBTYPE_SYSTEM_SLOTS_LENGTH,
	DMI_SUBTYPE_SYSTEM_SLOTS_CHARACTERISTICS = 0x0D,

	/* 3.3.11 On Board Devices Information */

	/* 3.3.12 OEM Strings */
	DMI_SUBTYPE_OEM_STRINGS = 0x04,

	/* 3.3.13 System Configuration Options */
	DMI_SUBTYPE_OEM_SYSTEM_CONFIG_OPTIONS = 0x04,

	/* 3.3.14 BIOS Language Information */
	DMI_SUBTYPE_BIOS_LANG_INFO_INSTALLED_LANG = 0x04,
	DMI_SUBTYPE_BIOS_LANG_INFO_CURRENT_LANG = 0x15,

	/* 3.3.15 Group Associations */
	DMI_SUBTYPE_GROUP_ASSOCIATION_NAME = 0x04,
	DMI_SUBTYPE_GROUP_ASSOCIATION_ITEMS,

	/* 3.3.16 System Event Log */
	DMI_SUBTYPE_SYSEVENT_LOG_AREA_LENGTH = 0x04,
	DMI_SUBTYPE_SYSEVENT_LOG_HEADER_START_OFFSET = 0x06,
	DMI_SUBTYPE_SYSEVENT_LOG_HEADER_LENGTH,
	DMI_SUBTYPE_SYSEVENT_LOG_DATA_START_OFFSET,
	DMI_SUBTYPE_SYSEVENT_LOG_ACCESS_METHOD = 0x0A,
	DMI_SUBTYPE_SYSEVENT_LOG_STATUS,
	DMI_SUBTYPE_SYSEVENT_LOG_CHANGE_TOKEN,
	DMI_SUBTYPE_SYSEVENT_LOG_ACCESS_ADDRESS = 0x10,
	DMI_SUBTYPE_SYSEVENT_LOG_HEADER_FORMAT = 0x14,
	DMI_SUBTYPE_SYSEVENT_LOG_SUPPORTED_LOG_TYPE_DESC,

	/* 3.3.17 Physical Memory Array */
	DMI_SUBTYPE_PHYSICAL_MEMORY_ARRAY_LOCATION = 0x04,
	DMI_SUBTYPE_PHYSICAL_MEMORY_ARRAY_USE,
	DMI_SUBTYPE_PHYSICAL_MEMORY_ARRAY_ERROR_CORRECTION_TYPE,
	DMI_SUBTYPE_PHYSICAL_MEMORY_ARRAY_MAX_CAPACITY,
	DMI_SUBTYPE_PHYSICAL_MEMORY_ARRAY_ERROR_HANDLE = 0x0B,
	DMI_SUBTYPE_PHYSICAL_MEMORY_ARRAY_DEV_NUM = 0x0D,

	/* 3.3.18 Memory Device */
	DMI_SUBTYPE_MEMORY_DEVICE_ARRAY_HANDLE = 0x04,
	DMI_SUBTYPE_MEMORY_DEVICE_ERROR_HANDLE = 0x06,
	DMI_SUBTYPE_MEMORY_DEVICE_TOTAL_WIDTH = 0x08,
	DMI_SUBTYPE_MEMORY_DEVICE_DATA_WIDTH = 0x0A,
	DMI_SUBTYPE_MEMORY_DEVICE_SIZE = 0x0C,
	DMI_SUBTYPE_MEMORY_DEVICE_FORM_FACTOR = 0x0E,
	DMI_SUBTYPE_MEMORY_DEVICE_SET,
	DMI_SUBTYPE_MEMORY_DEVICE_LOCATOR,
	DMI_SUBTYPE_MEMORY_DEVICE_BANK_LOCATOR,
	DMI_SUBTYPE_MEMORY_DEVICE_TYPE,
	DMI_SUBTYPE_MEMORY_DEVICE_TYPE_DETAIL,
	DMI_SUBTYPE_MEMORY_DEVICE_SPEED = 0x15,
	DMI_SUBTYPE_MEMORY_DEVICE_MANUFACTURER = 0x17,
	DMI_SUBTYPE_MEMORY_DEVICE_SERIAL_NUMBER,
	DMI_SUBTYPE_MEMORY_DEVICE_ASSET_TAG,
	DMI_SUBTYPE_MEMORY_DEVICE_PART_NUMBER = 0x1A,

	/* 3.3.19 32-bit Memory Error Information */
	DMI_SUBTYPE_MEMORY_ERROR_INFO_TYPE = 0x04,
	DMI_SUBTYPE_MEMORY_ERROR_INFO_GRANUARITY,
	DMI_SUBTYPE_MEMORY_ERROR_INFO_OPERATION,
	DMI_SUBTYPE_MEMORY_ERROR_INFO_VENDOR_SYNDROME,
	DMI_SUBTYPE_MEMORY_ERROR_INFO_MEMORY_ARRAY_ADDRESS = 0x0B,
	DMI_SUBTYPE_MEMORY_ERROR_INFO_DEVICE_ADDRESS = 0x0F,
	DMI_SUBTYPE_MEMORY_ERROR_INFO_RESOLUTION = 0x13,

	/* 3.3.20 Memory Array Mapped Address */
	DMI_SUBTYPE_MEMORY_ARRAY_MADDR_STARTING_ADDR = 0x04,
	DMI_SUBTYPE_MEMORY_ARRAY_MADDR_ENDING_ADDR = 0x08,
	DMI_SUBTYPE_MEMORY_ARRAY_MADDR_RANGE_SIZE,
	DMI_SUBTYPE_MEMORY_ARRAY_MADDR_PHYSICAL_ARRAY_HANDLE = 0x0C,
	DMI_SUBTYPE_MEMORY_ARRAY_MADDR_PARTITION_WIDTH = 0x0F,

	/* 3.3.21 Memory Device Mapped Address */
	DMI_SUBTYPE_MEMORY_DEV_MADDR_STARTING_ADDR = 0x04,
	DMI_SUBTYPE_MEMORY_DEV_MADDR_ENDING_ADDR = 0x08,
	DMI_SUBTYPE_MEMORY_DEV_MADDR_RANGE_SIZE,
	DMI_SUBTYPE_MEMORY_DEV_MADDR_PHYSICAL_DEV_HANDLE = 0x0C,
	DMI_SUBTYPE_MEMORY_DEV_MADDR_MEM_ARRAY_MAPPED_ADDR_HANDLE = 0x0E,
	DMI_SUBTYPE_MEMORY_DEV_MADDR_PARTITION_ROW_POSITION = 0x10,

	/* 3.3.22 Built-in Pointing Device */
	DMI_SUBTYPE_BPDEV_TYPE = 0x04,
	DMI_SUBTYPE_BPDEV_INTERFACE,
	DMI_SUBTYPE_BPDEV_BUTTONS,

	/* 3.3.23 Portable Battery */
	DMI_SUBTYPE_PORTABLE_BATTERY_LOCATION = 0x04,
	DMI_SUBTYPE_PORTABLE_BATTERY_MANUFACTURER,
	DMI_SUBTYPE_PORTABLE_BATTERY_MANUFACTURER_DATE,
	DMI_SUBTYPE_PORTABLE_BATTERY_SERIAL_NUMBER,
	DMI_SUBTYPE_PORTABLE_BATTERY_NAME,
	DMI_SUBTYPE_PORTABLE_BATTERY_CHEMISTRY,
	DMI_SUBTYPE_PORTABLE_BATTERY_DESIGN_CAPACITY,
	DMI_SUBTYPE_PORTABLE_BATTERY_DESIGN_VOLTAGE = 0x0C,
	DMI_SUBTYPE_PORTABLE_BATTERY_SBDS_VERSION = 0x0E,
	DMI_SUBTYPE_PORTABLE_BATTERY_MAX_ERROR,
	DMI_SUBTYPE_PORTABLE_BATTERY_SBDS_SERIAL_NUMBER,
	DMI_SUBTYPE_PORTABLE_BATTERY_SBDS_MANUFACTURER_DATE = 0x12,
	DMI_SUBTYPE_PORTABLE_BATTERY_SBDS_CHEMISTRY = 0x14,
	DMI_SUBTYPE_PORTABLE_BATTERY_OEM_SPEC_INFO = 0x16,

	/* 3.3.24 System Reset */
	DMI_SUBTYPE_SYSTEM_RESET_STATUS = 0x04,
	DMI_SUBTYPE_SYSTEM_RESET_RESET_COUNT,
	DMI_SUBTYPE_SYSTEM_RESET_RESET_LIMIT = 0x07,
	DMI_SUBTYPE_SYSTEM_RESET_TIMER_INTERVAL = 0x09,
	DMI_SUBTYPE_SYSTEM_RESET_TIMEOUT = 0x0B,
	DMI_SUBTYPE_SYSTEM_RESET_WATCHDOG_TIMER,
	DMI_SUBTYPE_SYSTEM_RESET_BOOT_OPTION,
	DMI_SUBTYPE_SYSTEM_RESET_BOOT_OPTION_ON_LIMIT,

	/* 3.3.25 Hardware Security */
	DMI_SUBTYPE_HARDWARE_SECURITY_POWERON_PASSWORD_STATUS = 0x04,
	DMI_SUBTYPE_HARDWARE_SECURITY_KEYBOARD_PASSWORD_STATUS,
	DMI_SUBTYPE_HARDWARE_SECURITY_ADMIN_PASSWORD_STATUS,
	DMI_SUBTYPE_HARDWARE_SECURITY_FRONT_PANEL_RESET_STATUS,

	/* 3.3.26 System Power Controls */
	DMI_SUBTYPE_SYSTEM_POWER_CONTROL_NEXT_POWERON = 0x04,

	/* 3.3.27 Voltage Probe */
	DMI_SUBTYPE_VOLTAGE_PROBE_DESC = 0x04,
	DMI_SUBTYPE_VOLTAGE_PROBE_LOCATION,
	DMI_SUBTYPE_VOLTAGE_PROBE_MAX_VALUE,
	DMI_SUBTYPE_VOLTAGE_PROBE_STATUS,
	DMI_SUBTYPE_VOLTAGE_PROBE_MIN_VALUE,
	DMI_SUBTYPE_VOLTAGE_PROBE_RESOLUTION = 0x0A,
	DMI_SUBTYPE_VOLTAGE_PROBE_TOLERANCE = 0x0C,
	DMI_SUBTYPE_VOLTAGE_PROBE_ACCURACY = 0x0E,
	DMI_SUBTYPE_VOLTAGE_PROBE_OEM_SPEC_INFO = 0x10,
	DMI_SUBTYPE_VOLTAGE_PROBE_NOMINAL_VALUE = 0x14,

	/* 3.3.28 Cooling Device */
	DMI_SUBTYPE_COOLING_DEV_TEMPERATURE_PROBE_HANDLE = 0x04,
	DMI_SUBTYPE_COOLING_DEV_TYPE,
	DMI_SUBTYPE_COOLING_DEV_STATUS,
	DMI_SUBTYPE_COOLING_DEV_COOLING_UNIT_GROUP,
	DMI_SUBTYPE_COOLING_DEV_OEM_SPEC_INFO,
	DMI_SUBTYPE_COOLING_DEV_NOMINAL_SPEED = 0x0E,

	/* 3.3.29 Temperature Probe */
	DMI_SUBTYPE_TEMPERATURE_PROBE_DESCRIPTION = 0x04,
	DMI_SUBTYPE_TEMPERATURE_PROBE_LOCATION,
	DMI_SUBTYPE_TEMPERATURE_PROBE_MAX_VALUE,
	DMI_SUBTYPE_TEMPERATURE_PROBE_STATUS,
	DMI_SUBTYPE_TEMPERATURE_PROBE_MIN_VALUE,
	DMI_SUBTYPE_TEMPERATURE_PROBE_RESOLUTION = 0x0A,
	DMI_SUBTYPE_TEMPERATURE_PROBE_TOLERANCE = 0x0C,
	DMI_SUBTYPE_TEMPERATURE_PROBE_ACCURACY = 0x0E,
	DMI_SUBTYPE_TEMPERATURE_PROBE_OEM_SPEC_INFO = 0x10,
	DMI_SUBTYPE_TEMPERATURE_PROBE_NOMINAL_VALUE = 0x14,

	/* 3.3.30 Electrical Current Probe */
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_DESCRIPTION = 0x04,
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_LOCATION,
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_MAX_VALUE,
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_STATUS,
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_MIN_VALUE,
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_RESOLUTION = 0x0A,
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_TOLERANCE = 0x0C,
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_ACCURACY = 0x0E,
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_OEM_SPEC_INFO = 0x10,
	DMI_SUBTYPE_ELEC_CURRENT_PROBE_NOMINAL_VALUE = 0x14,

	/* 3.3.31 Out-of-band Remote Access */
	DMI_SUBTYPE_OUT_OF_BAND_REMOTE_ACCESS_MANUFACTURER_NAME = 0x04,
	DMI_SUBTYPE_OUT_OF_BAND_REMOTE_ACCESS_INBOUND_CONNECTION,
	DMI_SUBTYPE_OUT_OF_BAND_REMOTE_ACCESS_OUTBOUND_CONNECTION,

	/* 3.3.32 Boot Integrity Services Entry Point */

	/* 3.3.33 System Boot Information */
	DMI_SUBTYPE_SYSTEM_BOOT_INFO_STATUS = 0x0A,

	/* 3.3.34 64-bit Memory Error Information */
	DMI_SUBTYPE_64BIT_MEM_ERR_INFO_TYPE = 0x04,
	DMI_SUBTYPE_64BIT_MEM_ERR_INFO_GRANULARITY,
	DMI_SUBTYPE_64BIT_MEM_ERR_INFO_OPERATION,
	DMI_SUBTYPE_64BIT_MEM_ERR_INFO_VENDOR_SYNDROME,
	DMI_SUBTYPE_64BIT_MEM_ERR_INFO_MEMORY_ARRAY_ADDRESS = 0x0B,
	DMI_SUBTYPE_64BIT_MEM_ERR_INFO_DEVICE_ADDRESS = 0x13,
	DMI_SUBTYPE_64BIT_MEM_ERR_INFO_RESOLUTION = 0x1B,

	/* 3.3.35 Management Device */
	DMI_SUBTYPE_MANAGEMENT_DEVICE_DESC = 0x04,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_TYPE,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_ADDRESS,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_ADDRESS_TYPE = 0x0A,

	/* 3.3.36 Management Device Component */
	DMI_SUBTYPE_MANAGEMENT_DEVICE_COMPONENT_DESC = 0x04,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_COMPONENT_MANAGEMENT_DEV_HANDLE,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_COMPONENT_COMPONENT_HANDLE = 0x07,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_COMPONENT_THRESHOLD_HANDLE = 0x09,

	/* 3.3.37 Management Device Threshold Data */
	DMI_SUBTYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA_LOWER_NON_CRITICAL = 0x04,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA_UPPER_NON_CRITICAL = 0x06,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA_LOWER_CRITICAL = 0x08,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA_UPPER_CRITICAL = 0x0A,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA_LOWER_NON_RECOVERABLE = 0x0C,
	DMI_SUBTYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA_UPPER_NON_RECOVERABLE = 0x0E,

	/* 3.3.38 Memory Channel */
	DMI_SUBTYPE_MEMORY_CHANNEL_TYPE = 0x04,
	DMI_SUBTYPE_MEMORY_CHANNEL_MAX_LOAD,
	DMI_SUBTYPE_MEMORY_CHANNEL_DEVICES,

	/* 3.3.39 IPMI Device Information */
	DMI_SUBTYPE_IPMI_DEV_INFO_INTERFACE_TYPE = 0x04,
	DMI_SUBTYPE_IPMI_DEV_INFO_SPEC_VERSION,
	DMI_SUBTYPE_IPMI_DEV_INFO_I2C_SLAVE_ADDRESS,
	DMI_SUBTYPE_IPMI_DEV_INFO_NV_STORAGE_DEVICE_ADDRESS,
	DMI_SUBTYPE_IPMI_DEV_INFO_BASE_ADDRESS,
	DMI_SUBTYPE_IPMI_DEV_INFO_REGISTER_SPACING = 0x10,
	DMI_SUBTYPE_IPMI_DEV_INFO_INTERRUPT_NUMBER,
	DMI_SUBTYPE_IPMI_DEV_INFO_INTERRUPT_POLARITY,
	DMI_SUBTYPE_IPMI_DEV_INFO_INTERRUPT_TRIGGER_MODE,

	/* 3.3.40 System Power Supply */
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_POWER_UNIT_GROUP = 0x04,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_LOCATION,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_NAME,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_MANUFACTURER,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_SERIAL_NUMBER,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_ASSET_TAG,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_MODEL_PART_NUMBER,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_REVISION,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_MAX_POWER_CAPACITY,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_STATUS = 0x0E,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_PRESENT,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_INPUT_VOLTAGE_PROBE_HANDLE = 0x10,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_TYPE,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_COOLING_DEVICE_HANDLE = 0x12,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_INPUT_VOLTAGE_RANGE_SWITCHING,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_INPUT_CURRENT_PROBE_HANDLE = 0x14,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_PLUGGED,
	DMI_SUBTYPE_SYSTEM_POWER_SUPPLY_HOT_REPLACEABLE,

	/* 3.3.41 Inactive */
	/* 3.3.42 End Of Table */

};

class DDmiTable
{
public:
	DDmiTable() : m_len(0), m_num(0), m_ver(0), m_val(NULL) {}
	DDmiTable(int len, int num, int ver, u8* val);
	~DDmiTable();

	u16 m_len;
	u16 m_num;
	u16 m_ver;

	u8*	m_val;
};

class LIBDSL_API DDMI
{
public:
	DDMI();
	~DDMI();

	int getDmiInfo(DMIType type, DmiSubType subType, dsl::DStr& result);
	void getLastError(dsl::DStr& error);

protected:
	int init();
	u8 *memChunk(size_t base, size_t len, const char *devmem);
	int read(int fd, u8 *buf, size_t count, const char *prefix);
	int checkSum(const u8 *buf, size_t len);
	int smBiosDecode(u8 *buf, const char *devmem, bool bLegacy = false);
	int dmiTable(u32 base, u16 len, u16 num, u16 ver, const char *devmem);
	int dmiDecode(u8 *data, DMIType type, DmiSubType sub, dsl::DStr& result);
	int getString(DMIType type, DmiSubType sub, dsl::DStr& result);
	const char *dmiString(DDmiHeader *dm, u8 s);

protected:	// 格式转换
	int DmiSystemUuid(u8 *p, dsl::DStr& result);
	void DmiMemoryArrayErrorHandle(dsl::DStr& result, u16 code);
	void DmiMemoryDeviceWidth(dsl::DStr& result, u16 code);
	void DmiMappedAddressSize(dsl::DStr& result, u32 code);
	void DmiBatteryCapacity(dsl::DStr& result, u16 code, u8 multiplier);
	void DmiBatteryVoltage(dsl::DStr& result, u16 code);
	void DmiSystemResetCount(dsl::DStr& result, u16 code);
	void DmiSystemResetTimer(dsl::DStr& result, u16 code);
	void DmiSystemResetBootOption(dsl::DStr& result, u8 code);
	void DmiHardwareSecurityStatus(dsl::DStr& result, u8 code);
	void DmiVoltageProbeValue(dsl::DStr& result, u16 code);
	void DmiTemperatureProbeValue(dsl::DStr& result, u16 code);
	void DmiCurrentProbeValue(dsl::DStr& result, u16 code);
	void DmiSystemBootStatus(dsl::DStr& result, u16 code);
	void Dmi64bitMemoryErrorAddress(dsl::DStr& result, u64 code);
	void Dmi32bitMemoryErrorAddress(dsl::DStr& result, u32 code);
	void DmiMemoryChannelType(dsl::DStr& result, u8 code);
	void DmiIpmiInterfaceType(dsl::DStr& result, u8 code);
	void DmiMemoryControllerInterleave(dsl::DStr& result, u8 code);
	void DmiDump(dsl::DStr& result, DDmiHeader*h);

protected:
	int m_err;
	std::list<DDmiTable>	m_table;
	bool			m_inited;

	// windows specified
	u8 *m_pBuf;
	u32	m_bufSize;
#ifdef _WIN32
	HINSTANCE			m_dllInstance;
	pfGetSystemDMITable	m_pfGetDmiTable;
#endif
};

/////////////////////////////////////////////////
END_NAMESPACE_DSL


#endif // INCLUDED_LIBDSL_DDMI_H

